{
    "logging": {
        "log_level": 2,
        "progress_indent": 2,
        "_comment": "log_level: 0=errors only, 1=errors and progress, 2=errors, progress and debug | progress_indent: indent used for progress messages"
    },

    "citations_csv": {
        "directory": ".",
        "filename": "citations",
        "missing_data_string": "N/A",
        "array_separator": "|",
        "first_last_separator": "+",
        "title_case_titles": true,
        "_comment": "directory: directory of the citation csv | filename: filename of the citation csv | missing_data_string: string to use for missing data | array_separator: separator for arrays in the csv | first_last_separator: separator for first and last names in author fields | title_case_titles: whether to put all titles in title case"
    },

    "markdown": {
        "directory": "md/",
        "link_cited": true,
        "delete_unmatched_entries": true,
        "automate_pdf_link": {
            "doi": true,
            "isbn": true
        },
        "included_properties": [
            "title",
            "author",
            "year",
            "journal",
            "publisher",
            "url",
            "type",
            "abstract"
        ],
        "user_defined_properties": {
            "physical_copy": false,
            "processed": false
        },
        "_comment": "directory: directory to save markdown files | link_cited: whether to link a paper's md to the mds of cited papers in your citation csv, if they are present, in a `cited` property | delete_unmatched_entries: whether to delete entries in the markdown directory that are not cited in the citation csv | automate_pdf_link: whether to automatically add a link to the pdf of the paper in the md | included_properties: properties to include in the markdown file, must match name of attributes in csv (note when data is missing the property will be omitted entirely) | user_defined_properties: user-defined properties to include in the md"
    },

    "bibliography": {
        "directory": ".",
        "filename": "citations",
        "make_hayagriva": true,
        "make_bibtex": true,
        "delete_unmatched_entries": true,
        "_comment": "directory: directory to save bibliography files | make_hayagriva: whether to make a Hayagriva bibliography file | make_bibtex: whether to make a BibTeX bibliography file | delete_unmatched_entries: whether to delete entries in the bibliography that are not cited in the citation csv"
    },

    "network": {
        "timeout": 3,
        "num_retries": 3,
        "retry_delay": 2,
        "_comment": "timeout: timeout for requests in seconds | num_retries: number of retries | retry_delay: delay between retries in seconds"
    },

    "polite_api": {
        "project_name": null,
        "project_version": null,
        "project_url": null,
        "contact_email": null,
        "_comment": "provide your project details if you would like to use the CrossRef polite api (slightly faster), or if you plan to make frequent use of the OpenLibrary api. See links for details: https://www.crossref.org/documentation/retrieve-metadata/rest-api/tips-for-using-the-crossref-rest-api/ and "
    },

    "advanced": {
        "_comment": "Advanced settings. Only change if you know what you are doing.",
        "api": {
            "crossref": {
                "url": "https://api.crossref.org/works/",
                "_example": "https://api.crossref.org/works/10.1126/science.359.6377.725",
                "_comment": "The URL for the Crossref API. Can append DOI. Not used in script, crossref.restful used instead."
            },
            "openlibrary": {
                "url": "https://openlibrary.org/search.json?q=isbn:",
                "_example": "https://openlibrary.org/search.json?q=isbn:9780134092669",
                "_comment": "The URL for the Open Library API. Can append ISBN. Read more at https://openlibrary.org/developers/api."
            },
            "googlebooks": {
                "url": "https://www.googleapis.com/books/v1/volumes?q=isbn:",
                "_example": "https://www.googleapis.com/books/v1/volumes?q=isbn:9780134092669",
                "_comment": "The URL for the Google Books API. Can append ISBN."
            }
        },
        "file_encoding": {
            "open_encoding": "utf-8-sig",
            "close_encoding": "utf-8",
            "_comment": "open_encoding: encoding to open files with | close_encoding: encoding to save files with"
        },
        "csv_headers": {
            "all_headers": [
                "citation-code",
                "title",
                "author",
                "year",
                "month",
                "journal",
                "abbreviated-journal",
                "publisher",
                "page",
                "volume",
                "number",
                "doi",
                "isbn",
                "url",
                "cited-by-count",
                "type",
                "abstract",
                "cited-dois"
            ],
            "crossref": {
                "/": "message",
                "title": "title/0",
                "author": "author/*/[family,given]",
                "year": "published-print/date-parts/0/0|published-online/date-parts/0/0",
                "month": "published-print/date-parts/0/1|published-online/date-parts/0/1",
                "journal": "container-title/0",
                "abbreviated-journal": "short-container-title/0",
                "page": "page",
                "volume": "volume",
                "number": "number",
                "doi": "DOI",
                "url": "resource/primary/URL",
                "cited-by-count": "is-referenced-by-count",
                "type": "type",
                "abstract": "abstract",
                "cited-dois": "refereence/*/DOI"
            },
            "openlibrary": {
            },
            "googlebooks": {
            },
            "_comment": "headers for the csv file overall and by api, with paths to find data in json response from each api. If the header is missing for the api, or data is not found in response, the property will be set to the missing_data_string in settings.json. | indicate alternate paths to try in order, Integers in path represent the index of the array element to access, * represents creating a list of the items found at the rest of the path across an array, and [] are for concatenation of two items in an object (only used for authors). The `/` key is used to specify the root of the json response for all other paths to be evaluated by. If the root is not specified, the root is assumed to be the json response itself."
        }
    }
}